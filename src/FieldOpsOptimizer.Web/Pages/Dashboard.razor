@page "/"
@page "/dashboard"
@using FieldOpsOptimizer.Web.Services
@using FieldOpsOptimizer.Web.Models
@using FieldOpsOptimizer.Web.Components
@inject DashboardService DashboardService
@inject IJSRuntime JSRuntime

<PageTitle>Dashboard - Field Operations Optimizer</PageTitle>

<div class="dashboard-container">
    <!-- Dashboard Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 mb-0">Field Operations Dashboard</h1>
                    <p class="text-muted mb-0">Real-time overview of your field operations</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary" @onclick="RefreshData" disabled="@isLoading">
                        <span class="oi oi-reload" aria-hidden="true"></span>
                        @if (isLoading) { <span class="spinner-border spinner-border-sm ms-1" role="status"></span> } else { <span class="ms-1">Refresh</span> }
                    </button>
                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <span class="oi oi-plus" aria-hidden="true"></span> Quick Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/jobs/new"><span class="oi oi-plus me-2"></span>New Job</a></li>
                            <li><a class="dropdown-item" href="/routes/new"><span class="oi oi-map me-2"></span>New Route</a></li>
                            <li><a class="dropdown-item" href="/technicians/new"><span class="oi oi-person me-2"></span>New Technician</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="mt-3">Loading dashboard data...</div>
        </div>
    }
    else
    {
        <!-- KPI Cards Row -->
        <div class="row g-3 mb-4">
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Technicians On Duty" 
                         Value="@($"{dashboardStats?.TechniciansOnDuty}/{dashboardStats?.TotalTechnicians}")"
                         Icon="oi-people" 
                         IconColor="success" 
                         IsClickable="true"
                         OnClick="@(() => NavigateToPage("/technicians"))" />
            </div>
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Active Routes" 
                         Value="@dashboardStats?.ActiveRoutes.ToString()"
                         Icon="oi-map" 
                         IconColor="info" 
                         IsClickable="true"
                         OnClick="@(() => NavigateToPage("/routes"))" />
            </div>
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Pending Jobs" 
                         Value="@dashboardStats?.PendingJobs.ToString()"
                         Icon="oi-clock" 
                         IconColor="warning" 
                         IsClickable="true"
                         OnClick="@(() => NavigateToPage("/jobs"))" />
            </div>
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Jobs In Progress" 
                         Value="@dashboardStats?.InProgressJobs.ToString()"
                         Icon="oi-media-play" 
                         IconColor="primary" />
            </div>
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Completed Today" 
                         Value="@dashboardStats?.CompletedJobsToday.ToString()"
                         Icon="oi-check" 
                         IconColor="success" 
                         ShowTrend="true"
                         TrendPercentage="12.5" />
            </div>
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <KpiCard Title="Overdue Jobs" 
                         Value="@dashboardStats?.OverdueJobs.ToString()"
                         Icon="oi-warning" 
                         IconColor="danger" 
                         ValueColor="danger" />
            </div>
        </div>

        <!-- Performance Metrics Row -->
        <div class="row g-3 mb-4">
            <div class="col-lg-3 col-md-6">
                <KpiCard Title="Completion Rate" 
                         Value="@($"{dashboardStats?.CompletionRate:F1}%")"
                         Subtitle="This week"
                         Icon="oi-target" 
                         IconColor="success" 
                         ShowTrend="true"
                         TrendPercentage="5.2" />
            </div>
            <div class="col-lg-3 col-md-6">
                <KpiCard Title="Avg Job Duration" 
                         Value="@FormatTimeSpan(dashboardStats?.AverageJobDuration)"
                         Subtitle="Per job"
                         Icon="oi-timer" 
                         IconColor="info" />
            </div>
            <div class="col-lg-3 col-md-6">
                <KpiCard Title="Distance Traveled" 
                         Value="@($"{dashboardStats?.TotalDistanceTraveledToday:F1} km")"
                         Subtitle="Today"
                         Icon="oi-dashboard" 
                         IconColor="warning" />
            </div>
            <div class="col-lg-3 col-md-6">
                <KpiCard Title="Fuel Savings" 
                         Value="@($"${dashboardStats?.FuelSavingsToday:F2}")"
                         Subtitle="Today"
                         Icon="oi-dollar" 
                         IconColor="success" 
                         ShowTrend="true"
                         TrendPercentage="8.3" />
            </div>
        </div>

        <!-- Main Content Row -->
        <div class="row g-4">
            <!-- Recent Activity -->
            <div class="col-lg-8">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <span class="oi oi-pulse me-2"></span>Recent Activity
                        </h5>
                        <button class="btn btn-sm btn-outline-secondary" @onclick="RefreshActivities">
                            <span class="oi oi-reload" aria-hidden="true"></span>
                        </button>
                    </div>
                    <div class="card-body">
                        @if (recentActivities != null && recentActivities.Any())
                        {
                            <div class="activity-feed">
                                @foreach (var activity in recentActivities)
                                {
                                    <div class="activity-item">
                                        <div class="activity-icon text-@activity.Color">
                                            <span class="oi @activity.Icon" aria-hidden="true"></span>
                                        </div>
                                        <div class="activity-content">
                                            <div class="activity-description">@activity.Description</div>
                                            <div class="activity-time text-muted">
                                                @FormatRelativeTime(activity.Timestamp)
                                            </div>
                                        </div>
                                        <div class="activity-status">
                                            <span class="badge bg-@activity.Color">@activity.Status</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <span class="oi oi-info text-muted" style="font-size: 2rem;"></span>
                                <p class="text-muted mt-2">No recent activity</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Weather & Quick Stats -->
            <div class="col-lg-4">
                <div class="row g-3">
                    <!-- Weather Widget -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <span class="oi oi-cloudy me-2"></span>Weather Conditions
                                </h6>
                            </div>
                            <div class="card-body text-center">
                                @if (weatherInfo != null)
                                {
                                    <div class="weather-icon mb-2" style="font-size: 3rem;">@weatherInfo.Icon</div>
                                    <h4 class="mb-1">@weatherInfo.TemperatureÂ°C</h4>
                                    <p class="text-muted mb-3">@weatherInfo.Condition</p>
                                    <div class="row text-center">
                                        <div class="col-6">
                                            <small class="text-muted d-block">Humidity</small>
                                            <strong>@weatherInfo.Humidity%</strong>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted d-block">Wind</small>
                                            <strong>@weatherInfo.WindSpeed km/h @weatherInfo.WindDirection</strong>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="py-3">
                                        <div class="spinner-border spinner-border-sm text-muted" role="status"></div>
                                        <p class="text-muted small mt-2">Loading weather...</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Quick Actions -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <span class="oi oi-flash me-2"></span>Quick Actions
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="d-grid gap-2">
                                    <button class="btn btn-outline-primary btn-sm" @onclick="@(() => NavigateToPage("/routes/optimize"))">
                                        <span class="oi oi-graph me-2"></span>Optimize Routes
                                    </button>
                                    <button class="btn btn-outline-info btn-sm" @onclick="@(() => NavigateToPage("/jobs"))">
                                        <span class="oi oi-list me-2"></span>View All Jobs
                                    </button>
                                    <button class="btn btn-outline-success btn-sm" @onclick="@(() => NavigateToPage("/reports"))">
                                        <span class="oi oi-bar-chart me-2"></span>Generate Report
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Last Updated -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="text-center text-muted small">
                    <span class="oi oi-clock me-1"></span>
                    Last updated: @(dashboardStats?.LastUpdated.ToString("MMM dd, yyyy 'at' h:mm tt"))
                </div>
            </div>
        </div>
    }
</div>

@code {
    private DashboardStats? dashboardStats;
    private List<RecentActivity>? recentActivities;
    private WeatherInfo? weatherInfo;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            // Load all data concurrently
            var statsTask = DashboardService.GetDashboardStatsAsync();
            var activitiesTask = DashboardService.GetRecentActivitiesAsync(10);
            var weatherTask = DashboardService.GetWeatherInfoAsync();

            await Task.WhenAll(statsTask, activitiesTask, weatherTask);

            dashboardStats = await statsTask;
            recentActivities = await activitiesTask;
            weatherInfo = await weatherTask;
        }
        catch (Exception ex)
        {
            // Log error and continue with mock data
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RefreshData()
    {
        await LoadDashboardData();
    }

    private async Task RefreshActivities()
    {
        recentActivities = await DashboardService.GetRecentActivitiesAsync(10);
        StateHasChanged();
    }

    private async Task NavigateToPage(string url)
    {
        await JSRuntime.InvokeVoidAsync("window.location.href = @url");
    }

    private string FormatTimeSpan(TimeSpan? timeSpan)
    {
        if (!timeSpan.HasValue) return "N/A";
        
        var ts = timeSpan.Value;
        if (ts.TotalHours >= 1)
            return $"{ts.Hours}h {ts.Minutes}m";
        else
            return $"{ts.Minutes}m";
    }

    private string FormatRelativeTime(DateTime timestamp)
    {
        var timeSpan = DateTime.Now - timestamp;
        
        if (timeSpan.TotalMinutes < 1)
            return "Just now";
        else if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes}m ago";
        else if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours}h ago";
        else
            return timestamp.ToString("MMM dd, h:mm tt");
    }
}

<style>
    .dashboard-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 1rem;
    }

    .activity-feed {
        max-height: 400px;
        overflow-y: auto;
    }

    .activity-item {
        display: flex;
        align-items: flex-start;
        padding: 0.75rem 0;
        border-bottom: 1px solid #f8f9fa;
    }

    .activity-item:last-child {
        border-bottom: none;
    }

    .activity-icon {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background-color: rgba(0,0,0,0.05);
        font-size: 0.875rem;
        flex-shrink: 0;
    }

    .activity-content {
        flex-grow: 1;
        margin-left: 0.75rem;
    }

    .activity-description {
        font-size: 0.875rem;
        line-height: 1.4;
        margin-bottom: 0.25rem;
    }

    .activity-time {
        font-size: 0.75rem;
    }

    .activity-status {
        flex-shrink: 0;
        margin-left: 0.5rem;
    }

    .weather-icon {
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    @@media (max-width: 768px) {
        .dashboard-container {
            padding: 0.5rem;
        }
        
        .display-6 {
            font-size: 1.5rem;
        }
    }
</style>
